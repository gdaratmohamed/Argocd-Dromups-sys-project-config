pipeline {
    agent any

    environment {
        GIT_USERNAME = 'gdaratmohamed73@gmail.com' // Match the credential username
        GIT_REPO = 'gdaratmohamed/Argocd-Dromups-sys-project-config.git'
    }

    stages {
        stage('Clone repository') {
            steps {
                checkout scm
            }
        }

        stage('Update Image Tags') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'github-credentials', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_CREDENTIAL_USERNAME')]) {
                        // Override GIT_USERNAME with credential username if needed
                        env.GIT_USERNAME = "${GIT_CREDENTIAL_USERNAME}"

                        catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
                            // Configure Git
                            sh """
                                git config user.email "${env.GIT_USERNAME}"
                                git config user.name "Gdarat Mohamed"
                            """

                            // Update FRONTEND
                            sh """
                                echo "=== Mise à jour du frontend ==="
                                cat manifests/front-deployment.yaml
                                sed -i 's|gdaratmohamed/front-image:.*|gdaratmohamed/front-image:${DOCKERTAG}|g' manifests/front-deployment.yaml
                                echo "=== Après modification ==="
                                cat manifests/front-deployment.yaml
                            """

                            // Update BACKEND
                            sh """
                                echo "=== Mise à jour du backend ==="
                                cat manifests/back-deployment.yaml
                                sed -i 's|gdaratmohamed/backend-ai:.*|gdaratmohamed/backend-ai:${DOCKERTAG}|g' manifests/back-deployment.yaml
                                echo "=== Après modification ==="
                                cat manifests/back-deployment.yaml
                            """

                            // Commit and push
                            sh """
                                git add manifests/front-deployment.yaml manifests/back-deployment.yaml
                                git commit -m "Updated image tags to ${DOCKERTAG} [Jenkins Build ${env.BUILD_NUMBER}]" || echo "No changes to commit"
                                git push https://${env.GIT_USERNAME}:${GIT_PASSWORD}@github.com/${env.GIT_USERNAME}/${GIT_REPO} HEAD:main
                            """
                        }
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Les tags d\'images ont été mis à jour avec succès!'
        }
        failure {
            echo 'Échec de la mise à jour des tags d\'images!'
        }
    }
}